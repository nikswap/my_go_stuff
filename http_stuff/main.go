package main

import (
	"bytes"
	"encoding/json"
	"fmt"
	"log"
	"net/http"
)

type AutoGenerated struct {
	Args struct {
		Name string `json:"name"`
	} `json:"args"`
	Data  string `json:"data"`
	Files struct {
	} `json:"files"`
	Form struct {
	} `json:"form"`
	Headers struct {
		Accept         string `json:"Accept"`
		AcceptEncoding string `json:"Accept-Encoding"`
		AcceptLanguage string `json:"Accept-Language"`
		ContentLength  string `json:"Content-Length"`
		Host           string `json:"Host"`
		Origin         string `json:"Origin"`
		Referer        string `json:"Referer"`
		SecChUa        string `json:"Sec-Ch-Ua"`
		SecChUaMobile  string `json:"Sec-Ch-Ua-Mobile"`
		SecFetchDest   string `json:"Sec-Fetch-Dest"`
		SecFetchMode   string `json:"Sec-Fetch-Mode"`
		SecFetchSite   string `json:"Sec-Fetch-Site"`
		UserAgent      string `json:"User-Agent"`
		XAmznTraceID   string `json:"X-Amzn-Trace-Id"`
	} `json:"headers"`
	JSON   interface{} `json:"json"`
	Origin string      `json:"origin"`
	URL    string      `json:"url"`
}

type New_Emp struct {
	Name   string `json:"name"`
	Salary string `json:"salary"`
	Age    string `json:"age"`
}

func main() {
	var emp New_Emp
	emp.Age = "100"
	emp.Name = "John D. Smith"
	emp.Salary = "123123"
	js, _ := json.Marshal(emp)
	fmt.Println(js)
	u := bytes.NewReader(js)

	res, err := http.Post("https://httpbin.org/post", "application/json", u)

	if err != nil {
		log.Fatalln(err)
	}

	var status AutoGenerated
	if err := json.NewDecoder(res.Body).Decode(&status); err != nil {
		log.Fatalln(err)
	}

	defer res.Body.Close()
	log.Printf("%s -> %s\n", status.Origin, status.Data)
}
